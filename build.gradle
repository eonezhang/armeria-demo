group 'demo1'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'thrift'

ext {
    thriftPath="${project.projectDir}/thrift/thrift.osx-x86_64"
}

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'co.tomlee.gradle.plugins:gradle-thrift-plugin:0.0.6'
    }
}

repositories {
    mavenCentral()
}

configurations {
    javaAgent
}

dependencies {
    ['armeria',
//     'armeria-jetty',
//     'armeria-kafka',
//     'armeria-logback',
//     'armeria-retrofit2',
     'armeria-thrift',
//     'armeria-tomcat',
//     'armeria-zipkin',
//     'armeria-zookeeper'
    ].each {
        compile "com.linecorp.armeria:${it}:0.42.0"
    }

    compile 'org.apache.thrift:libthrift:0.10.0'

    // Logging
    runtime 'ch.qos.logback:logback-classic:1.2.2'
    runtime 'org.slf4j:log4j-over-slf4j:1.7.25'
}

// Require Java 8 to build the project.
tasks.withType(JavaCompile) {
    sourceCompatibility '1.8'
    targetCompatibility '1.8'
}

// Compile the Thrift service definitions.
task compileThrift(group: 'Build',
        description: 'Compiles the .thrift files') {
    [ 'main', 'test' ].each { scope ->
        def inputDir = "${project.projectDir}/src/${scope}/thrift"
        def outputDir = "${project.projectDir}/src/${scope}/gen-java"

        if (project.file(inputDir).isDirectory()) {
            inputs.dir inputDir
            outputs.dir outputDir

            project.sourceSets[scope].java.srcDir outputDir

            doLast {
                project.fileTree(inputDir) {
                    include '**/*.thrift'
                }.each { sourceFile ->
                    project.mkdir(outputDir)
                    project.exec {
                        commandLine project.ext.thriftPath,
                                '-gen', 'java',
                                '-out', outputDir,
                                '-I', "${sourceFile.parentFile.absolutePath}",
                                sourceFile.absolutePath
                    }
                }
            }
        }
    }
}
// Ensure the generated Thrift source files are available during the build.
tasks.compileJava.dependsOn(tasks.compileThrift)
//onIdeImport { tasks.compileThrift.execute() }

// Delete the source files generated by the Thrift compiler.
clean {
    [ 'main', 'test' ].each {
        delete "${project.projectDir}/src/$it/gen-java"
    }
}

compileTestJava {
    // Thrift-generated code produces some warnings.
    options.compilerArgs += ["-Xep:MissingOverride:OFF",
                             "-Xep:NonOverridingEquals:OFF", "-Xep:TypeParameterUnusedInFormals:OFF"]
}

String generatedSourcePath = "${projectDir}/src/generated"
project.sourceSets {
    main {
        java {
            srcDir "${generatedSourcePath}/main/java"
            srcDir "${generatedSourcePath}/main/grpc"
        }
    }
    test {
        java {
            srcDir "${generatedSourcePath}/test/java"
            srcDir "${generatedSourcePath}/test/grpc"
        }
    }
}

idea {
    module {
        sourceDirs += file("${projectDir}/src/generated/test/java");
    }
}